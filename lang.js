// lang.js - Central translation module (EN / HN / MR)
// Exposes setLanguage(lang), loadLanguage(), applyTranslations()

const translations = {
  EN: {
    navFeatures: "Features", navAbout: "About", navContact: "Contact",
    heroTitle: "Empower Your City", heroDesc: "Report civic issues in real-time and track resolutions.", getStarted: "Get Started",
    loginTitle: "Login to Continue", loginName: "Full Name*", loginMobile: "Mobile Number*", loginEmail: "Email (optional)",
    loginOtp: "OTP", loginGetOtp: "Get OTP", loginSubmit: "Submit", loginState: "Select State*", statePlaceholder: "Choose your state",
    stateAP: "Andhra Pradesh", stateAS: "Assam", stateBR: "Bihar", stateDL: "Delhi", stateGJ: "Gujarat", stateHR: "Haryana",
    stateKA: "Karnataka", stateMH: "Maharashtra", statePB: "Punjab", stateRJ: "Rajasthan", stateTN: "Tamil Nadu",
    stateUP: "Uttar Pradesh", stateWB: "West Bengal",

    btnPotholes: "Potholes", btnPotholesDesc: "Report road damages",
    btnGarbage: "Garbage", btnGarbageDesc: "Waste disposal issues",
    btnStreetlights: "Streetlights", btnStreetlightsDesc: "Faulty streetlights",
    btnWater: "Water Leakage", btnWaterDesc: "Pipeline issues",
    btnToilets: "Public Toilets", btnToiletsDesc: "Cleanliness issues",
    btnOther: "Other Complaints", btnOtherDesc: "Any other civic issue",
    btnParks: "Park Maintenance", btnParksDesc: "Broken benches, greenery care",
    btnSeasonal: "Seasonal Issues", btnSeasonalDesc: "Monsoon flooding, heat waves",
    btnTransport: "Public Transport", btnTransportDesc: "Buses, stops & infrastructure",

    statsTitle: "ЁЯУК Civic Issue Statistics", reportedIssues: "Reported Issues", inProgress: "In Progress", resolved: "Resolved",

    reportTitle: "Report an Issue", reportIssueTitle: "Issue Title", reportDesc: "Describe the problem...", reportLocation: "Enter location or allow GPS", reportSubmit: "ЁЯУ╕ Submit Report",

    loading: "Loading...", submissionSuccess: "Report submitted successfully!", success: "Report submitted successfully!",
    myAccount: "My Account", manageAccount: "Manage My Account", reportStatus: "Report Status", feedback: "My Feedback", submitFeedback: "Submit Feedback",
    savedLocations: "Saved Locations", saveChanges: "Save Changes", save: "Save", logout: "Logout ЁЯЪк",

    statusSubmitted: "Submitted", statusReached: "Reached Authorities", statusAction: "Action Started", statusFixed: "Fixed"
  },

  HN: {
    navFeatures: "рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдБ", navAbout: "рд╣рдорд╛рд░реЗ рдмрд╛рд░реЗ рдореЗрдВ", navContact: "рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ",
    heroTitle: "рдЕрдкрдиреЗ рд╢рд╣рд░ рдХреЛ рд╕рд╢рдХреНрдд рдмрдирд╛рдПрдВ", heroDesc: "рдирд╛рдЧрд░рд┐рдХ рд╕рдорд╕реНрдпрд╛рдУрдВ рдХреА рддреБрд░рдВрдд рд░рд┐рдкреЛрд░реНрдЯ рдХрд░реЗрдВ рдФрд░ рд╕рдорд╛рдзрд╛рди рдЯреНрд░реИрдХ рдХрд░реЗрдВред", getStarted: "рд╢реБрд░реВ рдХрд░реЗрдВ",
    loginTitle: "рдЬрд╛рд░реА рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ", loginName: "рдкреВрд░рд╛ рдирд╛рдо*", loginMobile: "рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░*", loginEmail: "рдИрдореЗрд▓ (рд╡реИрдХрд▓реНрдкрд┐рдХ)",
    loginOtp: "рдУрдЯреАрдкреА", loginGetOtp: "рдУрдЯреАрдкреА рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ", loginSubmit: "рд╕рдмрдорд┐рдЯ рдХрд░реЗрдВ", loginState: "рд░рд╛рдЬреНрдп рдЪреБрдиреЗрдВ*", statePlaceholder: "рдЕрдкрдирд╛ рд░рд╛рдЬреНрдп рдЪреБрдиреЗрдВ",
    stateAP: "рдЖрдВрдзреНрд░ рдкреНрд░рджреЗрд╢", stateAS: "рдЕрд╕рдо", stateBR: "рдмрд┐рд╣рд╛рд░", stateDL: "рджрд┐рд▓реНрд▓реА", stateGJ: "рдЧреБрдЬрд░рд╛рдд", stateHR: "рд╣рд░рд┐рдпрд╛рдгрд╛",
    stateKA: "рдХрд░реНрдирд╛рдЯрдХ", stateMH: "рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░", statePB: "рдкрдВрдЬрд╛рдм", stateRJ: "рд░рд╛рдЬрд╕реНрдерд╛рди", stateTN: "рддрдорд┐рд▓ рдирд╛рдбреБ",
    stateUP: "рдЙрддреНрддрд░ рдкреНрд░рджреЗрд╢", stateWB: "рдкрд╢реНрдЪрд┐рдо рдмрдВрдЧрд╛рд▓",

    btnPotholes: "рдЧрдбреНрдвреЗ", btnPotholesDesc: "рд╕рдбрд╝рдХ рдХреНрд╖рддрд┐ рдХреА рд░рд┐рдкреЛрд░реНрдЯ рдХрд░реЗрдВ",
    btnGarbage: "рдХрдЪрд░рд╛", btnGarbageDesc: "рдХрдЪрд░рд╛ рдирд┐рдкрдЯрд╛рди рдХреА рд╕рдорд╕реНрдпрд╛рдПрдБ",
    btnStreetlights: "рд╕реНрдЯреНрд░реАрдЯрд▓рд╛рдЗрдЯ", btnStreetlightsDesc: "рдЦрд░рд╛рдм рд╕реНрдЯреНрд░реАрдЯрд▓рд╛рдЗрдЯреНрд╕",
    btnWater: "рдкрд╛рдиреА рд░рд┐рд╕рд╛рд╡", btnWaterDesc: "рдкрд╛рдЗрдкрд▓рд╛рдЗрди рдХреА рд╕рдорд╕реНрдпрд╛рдПрдБ",
    btnToilets: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рд╢реМрдЪрд╛рд▓рдп", btnToiletsDesc: "рд╕рдлрд╛рдИ рдХреА рд╕рдорд╕реНрдпрд╛рдПрдБ",
    btnOther: "рдЕрдиреНрдп рд╢рд┐рдХрд╛рдпрддреЗрдВ", btnOtherDesc: "рдХреЛрдИ рдЕрдиреНрдп рдирд╛рдЧрд░рд┐рдХ рд╕рдорд╕реНрдпрд╛",
    btnParks: "рдкрд╛рд░реНрдХ рд░рдЦрд░рдЦрд╛рд╡", btnParksDesc: "рдЯреВрдЯреА рдмреЗрдВрдЪ, рд╣рд░рд┐рдпрд╛рд▓реА рджреЗрдЦрднрд╛рд▓",
    btnSeasonal: "рдореМрд╕рдореА рд╕рдорд╕реНрдпрд╛рдПрдБ", btnSeasonalDesc: "рдорд╛рдирд╕реВрди рдмрд╛рдврд╝, рд╣реАрдЯ рд╡реЗрд╡реНрд╕",
    btnTransport: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдкрд░рд┐рд╡рд╣рди", btnTransportDesc: "рдмрд╕реЗрдВ, рд╕реНрдЯреЙрдк рдФрд░ рдмреБрдирд┐рдпрд╛рджреА рдврд╛рдБрдЪрд╛",

    statsTitle: "ЁЯУК рдирд╛рдЧрд░рд┐рдХ рд╕рдорд╕реНрдпрд╛ рд╕рд╛рдВрдЦреНрдпрд┐рдХреА", reportedIssues: "рд░рд┐рдкреЛрд░реНрдЯ рдХреА рдЧрдИ рд╕рдорд╕реНрдпрд╛рдПрдБ", inProgress: "рдкреНрд░рдЧрддрд┐ рдкрд░", resolved: "рд╕реБрд▓рдЭрд╛рдИ рдЧрдИ",

    reportTitle: "рд╕рдорд╕реНрдпрд╛ рджрд░реНрдЬ рдХрд░реЗрдВ", reportIssueTitle: "рд╕рдорд╕реНрдпрд╛ рдХрд╛ рд╢реАрд░реНрд╖рдХ", reportDesc: "рд╕рдорд╕реНрдпрд╛ рдХрд╛ рд╡рд░реНрдгрди рдХрд░реЗрдВ...", reportLocation: "рд╕реНрдерд╛рди рджрд░реНрдЬ рдХрд░реЗрдВ рдпрд╛ рдЬреАрдкреАрдПрд╕ рдЪрд╛рд▓реВ рдХрд░реЗрдВ", reportSubmit: "ЁЯУ╕ рд░рд┐рдкреЛрд░реНрдЯ рд╕рдмрдорд┐рдЯ рдХрд░реЗрдВ",

    loading: "рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ...", submissionSuccess: "рд░рд┐рдкреЛрд░реНрдЯ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕рдмрдорд┐рдЯ рдХреА рдЧрдИ!", success: "рд░рд┐рдкреЛрд░реНрдЯ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕рдмрдорд┐рдЯ рдХреА рдЧрдИ!",
    myAccount: "рдореЗрд░рд╛ рдЦрд╛рддрд╛", manageAccount: "рдореЗрд░рд╛ рдЦрд╛рддрд╛ рдкреНрд░рдмрдВрдзрд┐рдд рдХрд░реЗрдВ", reportStatus: "рд░рд┐рдкреЛрд░реНрдЯ рд╕реНрдерд┐рддрд┐", feedback: "рдореЗрд░реА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛", submitFeedback: "рдлреАрдбрдмреИрдХ рд╕рдмрдорд┐рдЯ рдХрд░реЗрдВ",
    savedLocations: "рд╕рд╣реЗрдЬреЗ рдЧрдП рд╕реНрдерд╛рди", saveChanges: "рдкрд░рд┐рд╡рд░реНрддрди рд╕рд╣реЗрдЬреЗрдВ", save: "рд╕рд╣реЗрдЬреЗрдВ", logout: "рд▓реЙрдЧрдЖрдЙрдЯ ЁЯЪк",

    statusSubmitted: "рд╕рдмрдорд┐рдЯ рдХрд┐рдпрд╛ рдЧрдпрд╛", statusReached: "рдЕрдзрд┐рдХрд╛рд░рд┐рдпреЛрдВ рддрдХ рдкрд╣реБрдБрдЪрд╛", statusAction: "рдХрд╛рд░реНрд░рд╡рд╛рдИ рд╢реБрд░реВ", statusFixed: "рд╕рдорд╛рдзрд╛рди рдХрд┐рдпрд╛ рдЧрдпрд╛"
  },

  MR: {
    navFeatures: "рд╡реИрд╢рд┐рд╖реНрдЯреНрдпреЗ", navAbout: "рдЖрдордЪреНрдпрд╛рдмрджреНрджрд▓", navContact: "рд╕рдВрдкрд░реНрдХ",
    heroTitle: "рдЖрдкрд▓реНрдпрд╛ рд╢рд╣рд░рд╛рд▓рд╛ рд╕рдХреНрд╖рдо рдХрд░рд╛", heroDesc: "рдирд╛рдЧрд░реА рд╕рдорд╕реНрдпрд╛ рддреНрд╡рд░рд┐рдд рдиреЛрдВрджрд╡рд╛ рдЖрдгрд┐ рдирд┐рд░рд╛рдХрд░рдгреЗ рдЯреНрд░реЕрдХ рдХрд░рд╛.", getStarted: "рд╕реБрд░реВ рдХрд░рд╛",
    loginTitle: "рд╕реБрд░реВ рдареЗрд╡рдгреНрдпрд╛рд╕рд╛рдареА рд▓реЙрдЧрд┐рди рдХрд░рд╛", loginName: "рдкреВрд░реНрдг рдирд╛рд╡*", loginMobile: "рдореЛрдмрд╛рдИрд▓ рдирдВрдмрд░*", loginEmail: "рдИрдореЗрд▓ (рдРрдЪреНрдЫрд┐рдХ)",
    loginOtp: "рдУрдЯреАрдкреА", loginGetOtp: "рдУрдЯреАрдкреА рдорд┐рд│рд╡рд╛", loginSubmit: "рд╕рдмрдорд┐рдЯ рдХрд░рд╛", loginState: "рд░рд╛рдЬреНрдп рдирд┐рд╡рдбрд╛*", statePlaceholder: "рдЖрдкрд▓реЗ рд░рд╛рдЬреНрдп рдирд┐рд╡рдбрд╛",
    stateAP: "рдЖрдВрдзреНрд░ рдкреНрд░рджреЗрд╢", stateAS: "рдЖрд╕рд╛рдо", stateBR: "рдмрд┐рд╣рд╛рд░", stateDL: "рджрд┐рд▓реНрд▓реА", stateGJ: "рдЧреБрдЬрд░рд╛рдд", stateHR: "рд╣рд░рд┐рдпрд╛рдгрд╛",
    stateKA: "рдХрд░реНрдирд╛рдЯрдХ", stateMH: "рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░", statePB: "рдкрдВрдЬрд╛рдм", stateRJ: "рд░рд╛рдЬрд╕реНрдерд╛рди", stateTN: "рддрд╛рдорд┐рд│рдирд╛рдбреБ",
    stateUP: "рдЙрддреНрддрд░ рдкреНрд░рджреЗрд╢", stateWB: "рдкрд╢реНрдЪрд┐рдо рдмрдВрдЧрд╛рд▓",

    btnPotholes: "рдЦрдбреНрдбреЗ", btnPotholesDesc: "рд░рд╕реНрддреНрдпрд╛рдЪреНрдпрд╛ рдиреБрдХрд╕рд╛рдиреАрдЪреА рдиреЛрдВрдж рдХрд░рд╛",
    btnGarbage: "рдХрдЪрд░рд╛", btnGarbageDesc: "рдХрдЪрд░рд╛ рд╡реНрдпрд╡рд╕реНрдерд╛рдкрди рд╕рдорд╕реНрдпрд╛",
    btnStreetlights: "рд░рд╕реНрддреНрдпрд╛рд╡рд░реАрд▓ рджрд┐рд╡реЗ", btnStreetlightsDesc: "рдмрд┐рдШрдбрд▓реЗрд▓реЗ рджрд┐рд╡реЗ",
    btnWater: "рдкрд╛рдгреНрдпрд╛рдЪреА рдЧрд│рддреА", btnWaterDesc: "рдкрд╛рдИрдкрд▓рд╛рдЗрди рд╕рдорд╕реНрдпрд╛",
    btnToilets: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рд╢реМрдЪрд╛рд▓рдпреЗ", btnToiletsDesc: "рд╕реНрд╡рдЪреНрдЫрддреЗрдЪреНрдпрд╛ рд╕рдорд╕реНрдпрд╛",
    btnOther: "рдЗрддрд░ рддрдХреНрд░рд╛рд░реА", btnOtherDesc: "рдЗрддрд░ рдХреЛрдгрддреАрд╣реА рдирд╛рдЧрд░реА рд╕рдорд╕реНрдпрд╛",
    btnParks: "рдЙрджреНрдпрд╛рди рджреЗрдЦрднрд╛рд▓", btnParksDesc: "рддреБрдЯрд▓реЗрд▓реЗ рдмреЗрдВрдЪ, рд╣рд┐рд░рд╡рд│ рджреЗрдЦрднрд╛рд▓",
    btnSeasonal: "рд╣рдВрдЧрд╛рдореА рд╕рдорд╕реНрдпрд╛", btnSeasonalDesc: "рдорд╛рдиреНрд╕реВрди рдкреВрд░, рдЙрд╖реНрдгрддреЗрдЪреА рд▓рд╛рдЯ",
    btnTransport: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рд╡рд╛рд╣рддреВрдХ", btnTransportDesc: "рдмрд╕, рдерд╛рдВрдмреЗ рдЖрдгрд┐ рдкрд╛рдпрд╛рднреВрдд рд╕реБрд╡рд┐рдзрд╛",

    statsTitle: "ЁЯУК рдирд╛рдЧрд░реА рд╕рдорд╕реНрдпрд╛ рдЖрдХрдбреЗрд╡рд╛рд░реА", reportedIssues: "рдиреЛрдВрджрд╡рд▓реЗрд▓реНрдпрд╛ рд╕рдорд╕реНрдпрд╛", inProgress: "рдкреНрд░рдЧрддреАрдд", resolved: "рдирд┐рдХрд╛рд▓реА рдХрд╛рдврд▓реЗ",

    reportTitle: "рд╕рдорд╕реНрдпрд╛ рдиреЛрдВрджрд╡рд╛", reportIssueTitle: "рд╕рдорд╕реНрдпреЗрдЪреЗ рд╢реАрд░реНрд╖рдХ", reportDesc: "рд╕рдорд╕реНрдпреЗрдЪреЗ рд╡рд░реНрдгрди рдХрд░рд╛...", reportLocation: "рд╕реНрдерд╛рди рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛ рдХрд┐рдВрд╡рд╛ рдЬреАрдкреАрдПрд╕рд▓рд╛ рдкрд░рд╡рд╛рдирдЧреА рджреНрдпрд╛", reportSubmit: "ЁЯУ╕ рдЕрд╣рд╡рд╛рд▓ рд╕рдмрдорд┐рдЯ рдХрд░рд╛",

    loading: "рд▓реЛрдб рд╣реЛрдд рдЖрд╣реЗ...", submissionSuccess: "рд░рд┐рдкреЛрд░реНрдЯ рдпрд╢рд╕реНрд╡реАрдкрдгреЗ рд╕рдмрдорд┐рдЯ рдЭрд╛рд▓реЗ!", success: "рд░рд┐рдкреЛрд░реНрдЯ рдпрд╢рд╕реНрд╡реАрдкрдгреЗ рд╕рдмрдорд┐рдЯ рдЭрд╛рд▓реЗ!",
    myAccount: "рдорд╛рдЭреЗ рдЦрд╛рддреЗ", manageAccount: "рдорд╛рдЭреЗ рдЦрд╛рддреЗ рд╡реНрдпрд╡рд╕реНрдерд╛рдкрд┐рдд рдХрд░рд╛", reportStatus: "рд░рд┐рдкреЛрд░реНрдЯ рд╕реНрдерд┐рддреА", feedback: "рдорд╛рдЭрд╛ рдЕрднрд┐рдкреНрд░рд╛рдп", submitFeedback: "рдЕрднрд┐рдкреНрд░рд╛рдп рд╕рдмрдорд┐рдЯ рдХрд░рд╛",
    savedLocations: "рд╕рд╣реЗрдЬреЗрд▓реЗ рд╕реНрдерд╛рди", saveChanges: "рдмрджрд▓ рдЬрддрди рдХрд░рд╛", save: "рдЬрддрди рдХрд░рд╛", logout: "рд▓реЙрдЧрдЖрдЙрдЯ ЁЯЪк",

    statusSubmitted: "рд╕рдмрдорд┐рдЯ рдХреЗрд▓реЗ", statusReached: "рдЕрдзрд┐рдХрд╛рд▒реНрдпрд╛рдВрдХрдбреЗ рдкреЛрд╣реЛрдЪрд▓реЗ", statusAction: "рдХрд╛рд░рд╡рд╛рдИ рд╕реБрд░реВ", statusFixed: "рд╕реБрдзрд╛рд░рд▓реЗ"
  }
};

// expose current language and helpers
window.currentLang = localStorage.getItem("lang") || "EN";

function loadLanguage() {
  const stored = localStorage.getItem("lang");
  if (stored && translations[stored]) window.currentLang = stored;
  applyTranslations();
}

function setLanguage(lang) {
  if (!translations[lang]) return;
  window.currentLang = lang;
  localStorage.setItem("lang", lang);
  applyTranslations();
}

// apply translations - updates textContent, innerHTML for elements with data-translate,
// placeholder for inputs and textarea, option text for select options (using data-translate).
function applyTranslations() {
  document.querySelectorAll("[data-translate]").forEach((el) => {
    const key = el.getAttribute("data-translate");
    const txt = translations[window.currentLang] && translations[window.currentLang][key];
    if (!txt) return;

    // Inputs and textareas => placeholder
    if (el.tagName === "INPUT" || el.tagName === "TEXTAREA") {
      const type = el.getAttribute("type");
      if (type === "button" || type === "submit" || el.tagName === "BUTTON") {
        el.value = txt;
        el.innerText = txt;
      } else {
        el.placeholder = txt;
      }
    } else {
      // use innerHTML when translations include emoji/icons
      el.innerHTML = txt;
    }
  });

  // Translate <option data-translate> contents and disabled placeholders
  document.querySelectorAll("select option[data-translate]").forEach((opt) => {
    const key = opt.getAttribute("data-translate");
    const txt = translations[window.currentLang] && translations[window.currentLang][key];
    if (txt) opt.textContent = txt;
  });

  // translate disabled placeholder options in selects (if any)
  document.querySelectorAll("select option[disabled][data-translate]").forEach(opt => {
    const key = opt.getAttribute("data-translate");
    const txt = translations[window.currentLang] && translations[window.currentLang][key];
    if (txt) opt.textContent = txt;
  });

  // If popup visible, update it
  const popupContent = document.getElementById("popupContent");
  if (popupContent && popupContent.dataset.translateKey) {
    const key = popupContent.dataset.translateKey;
    const txt = translations[window.currentLang] && translations[window.currentLang][key];
    if (txt) popupContent.innerHTML = txt;
  }

  // Also refresh any dynamically created modals (status modal labels)
  document.querySelectorAll(".status-label[data-translate]").forEach(el => {
    const key = el.getAttribute("data-translate");
    const txt = translations[window.currentLang] && translations[window.currentLang][key];
    if (txt) el.textContent = txt;
  });

  // Update any language code button text if present
  const langButton = document.getElementById("langDropdown");
  if (langButton) langButton.textContent = window.currentLang;
}

// wire language dropdown items automatically
document.addEventListener("DOMContentLoaded", () => {
  document.querySelectorAll("[data-lang]").forEach(item => {
    item.addEventListener("click", (e) => {
      e.preventDefault();
      const code = item.getAttribute("data-lang");
      setLanguage(code);
    });
  });

  loadLanguage();
});

// backwards compatibility exports
window.setLanguage = setLanguage;
window.loadLanguage = loadLanguage;
window.applyTranslations = applyTranslations;
